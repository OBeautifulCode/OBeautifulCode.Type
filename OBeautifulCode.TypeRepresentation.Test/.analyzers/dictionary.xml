<!-- For usage of this file, see: https://msdn.microsoft.com/en-us/library/bb514188.aspx -->
<Dictionary>
  <Words>
    <Unrecognized>
      <Word></Word>
    </Unrecognized>
    <Recognized>
      <!-- Describes data that was made anonymous -->
      <Word>anonymized</Word>

      <!-- Application Programming Interface -->
      <Word>Api</Word>

      <!-- The name of the SAAS platform we use for continuous integration -->
      <Word>AppVeyor</Word>

      <!-- Binary JSON -->
      <Word>Bson</Word>

      <!-- Describes a boolean -->
      <Word>bool</Word>

      <!-- A piece of data. -->
      <Word>datapoint</Word>
      <Word>datapoints</Word>

      <!-- The act of deserializing. -->
      <Word>deserializes</Word>

      <!-- Acronym for Extract, Transform, Load -->
      <Word>ETL</Word>

      <!-- Acronym for Fiscal Year -->
      <Word>FY</Word>

      <!-- Plural of Func, a .net type -->
      <Word>funcs</Word>

      <!-- Acronym for JavaScript Object Notation -->
      <Word>json</Word>

      <!-- The name of the SAAS platform we use for exploring log messages -->
      <Word>Loggly</Word>

      <!-- The name of an open source organization on GitHub, lead by Lawson Caudill -->
      <Word>Naos</Word>

      <!-- Represents a value Type in .NET that can be assigned null -->
      <Word>nullable</Word>

      <!-- The name of an open source organization on GitHub, lead by Suraj Gupta -->
      <Word>OBeautifulCode</Word>

      <!-- Synonym for parenthesis -->
      <Word>parens</Word>

      <!-- Acronym for Portable Document Format -->
      <Word>pdf</Word>

      <!-- Describes something that persists information. -->
      <Word>persistor</Word>

      <!-- 
      Commonly-used to describe a PKCS#12 file, which stores a private key 
      and it's associated certificate chain. 
      -->
      <Word>PFX</Word>

      <!-- Acronym for Secure Hash Algorithm. -->
      <Word>SHA</Word>

      <!-- A series of datapoints indexed in time order -->
      <Word>timeseries</Word>

      <!-- In .NET, a way describe a type parameter in generics. -->
      <Word>typeparam</Word>

      <!-- Refers to some piece of data that has not yet been validated -->
      <Word>unvalidated</Word>

      <!-- The file extension and file format for an Excel file -->
      <Word>xls</Word>
      <Word>xlsx</Word>

      <!-- The name of the SAAS platform we us for customer service support tickets, and help articles -->
      <Word>Zendesk</Word>
    </Recognized>
    <Deprecated>
      <Term PreferredAlternate=""></Term>
    </Deprecated>
    <Compound>
      <Term CompoundAlternate="OBeautifulCode">obeautifulcode</Term>
    </Compound>
    <DiscreteExceptions>
      <Term></Term>
    </DiscreteExceptions>
  </Words>
  <Acronyms>
    <CasingExceptions>
      <Acronym></Acronym>
    </CasingExceptions>
  </Acronyms>
</Dictionary>
