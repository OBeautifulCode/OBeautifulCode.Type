// --------------------------------------------------------------------------------------------------------------------
// <copyright file="StandardTimeZoneExtensions.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Type
{
    using System;
    using System.Collections.Concurrent;
    using System.Diagnostics.CodeAnalysis;
    using OBeautifulCode.CodeAnalysis.Recipes;
    using static System.FormattableString;

    /// <summary>
    /// Extension methods on <see cref="StandardTimeZone"/>.
    /// </summary>
    public static class StandardTimeZoneExtensions
    {
        private static readonly ConcurrentDictionary<StandardTimeZone, TimeZoneInfo> CachedStandardTimeZoneToTimeZoneInfoMap = new ConcurrentDictionary<StandardTimeZone, TimeZoneInfo>();

        /// <summary>
        /// Gets the <see cref="TimeZoneInfo"/> associated with a specified <see cref="StandardTimeZone"/>.
        /// </summary>
        /// <remarks>
        /// Case statements generated via unit test.
        /// </remarks>
        /// <param name="timeZone">The time zone.</param>
        /// <returns>
        /// The <see cref="TimeZoneInfo"/> associated with a specified <see cref="StandardTimeZone"/>.
        /// </returns>
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity", Justification = ObcSuppressBecause.CA1502_AvoidExcessiveComplexity_DisagreeWithAssessment)]
        [SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode", Justification = ObcSuppressBecause.CA1505_AvoidUnmaintainableCode_DisagreeWithAssessment)]
        public static TimeZoneInfo ToTimeZoneInfo(
            this StandardTimeZone timeZone)
        {
            if (timeZone == StandardTimeZone.Unknown)
            {
                throw new ArgumentOutOfRangeException(Invariant($"{nameof(timeZone)} is {nameof(StandardTimeZone)}.{nameof(StandardTimeZone.Unknown)}"));
            }

            if (CachedStandardTimeZoneToTimeZoneInfoMap.ContainsKey(timeZone))
            {
                return CachedStandardTimeZoneToTimeZoneInfoMap[timeZone];
            }

            string serializedString;

            switch (timeZone)
            {
                case StandardTimeZone.Dateline:
                    serializedString = @"Dateline Standard Time;-720;(UTC-12:00) International Date Line West;Dateline Standard Time;Dateline Daylight Time;;";
                    break;
                case StandardTimeZone.Aleutian:
                    serializedString = @"Aleutian Standard Time;-600;(UTC-10:00) Aleutian Islands;Aleutian Standard Time;Aleutian Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Hawaiian:
                    serializedString = @"Hawaiian Standard Time;-600;(UTC-10:00) Hawaii;Hawaiian Standard Time;Hawaiian Daylight Time;;";
                    break;
                case StandardTimeZone.Marquesas:
                    serializedString = @"Marquesas Standard Time;-570;(UTC-09:30) Marquesas Islands;Marquesas Standard Time;Marquesas Daylight Time;;";
                    break;
                case StandardTimeZone.Alaskan:
                    serializedString = @"Alaskan Standard Time;-540;(UTC-09:00) Alaska;Alaskan Standard Time;Alaskan Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.PacificMexico:
                    serializedString = @"Pacific Standard Time (Mexico);-480;(UTC-08:00) Baja California;Pacific Standard Time (Mexico);Pacific Daylight Time (Mexico);[01:01:0001;12:31:2009;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2010;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Pacific:
                    serializedString = @"Pacific Standard Time;-480;(UTC-08:00) Pacific Time (US & Canada);Pacific Standard Time;Pacific Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.UnitedStatesMountain:
                    serializedString = @"US Mountain Standard Time;-420;(UTC-07:00) Arizona;US Mountain Standard Time;US Mountain Daylight Time;;";
                    break;
                case StandardTimeZone.MountainMexico:
                    serializedString = @"Mountain Standard Time (Mexico);-420;(UTC-07:00) Chihuahua, La Paz, Mazatlan;Mountain Standard Time (Mexico);Mountain Daylight Time (Mexico);[01:01:0001;12:31:9999;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Mountain:
                    serializedString = @"Mountain Standard Time;-420;(UTC-07:00) Mountain Time (US & Canada);Mountain Standard Time;Mountain Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Yukon:
                    serializedString = @"Yukon Standard Time;-420;(UTC-07:00) Yukon;Yukon Standard Time;Yukon Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];-60;][01:01:2007;12:31:2007;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2008;12:31:2008;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2009;12:31:2009;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2010;12:31:2010;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2011;12:31:2011;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2012;12:31:2012;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2013;12:31:2013;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2014;12:31:2014;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2015;12:31:2015;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2016;12:31:2016;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2017;12:31:2017;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2018;12:31:2018;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2019;12:31:2019;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];-60;][01:01:2020;12:31:2020;60;[0;02:00:00;3;2;0;];[0;00:00:00;1;1;3;];-60;];";
                    break;
                case StandardTimeZone.CentralAmerica:
                    serializedString = @"Central America Standard Time;-360;(UTC-06:00) Central America;Central America Standard Time;Central America Daylight Time;;";
                    break;
                case StandardTimeZone.Central:
                    serializedString = @"Central Standard Time;-360;(UTC-06:00) Central Time (US & Canada);Central Standard Time;Central Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.EasterIsland:
                    serializedString = @"Easter Island Standard Time;-360;(UTC-06:00) Easter Island;Easter Island Standard Time;Easter Island Daylight Time;[01:01:0001;12:31:2007;60;[0;22:00:00;10;2;6;];[0;22:00:00;3;2;6;];][01:01:2008;12:31:2008;60;[0;22:00:00;10;2;6;];[0;22:00:00;3;5;6;];][01:01:2009;12:31:2009;60;[0;22:00:00;10;2;6;];[0;22:00:00;3;2;6;];][01:01:2010;12:31:2010;60;[0;22:00:00;10;2;6;];[0;22:00:00;4;1;6;];][01:01:2011;12:31:2011;60;[0;22:00:00;8;3;6;];[0;22:00:00;5;1;6;];][01:01:2012;12:31:2012;60;[0;22:00:00;9;1;6;];[0;22:00:00;4;5;6;];][01:01:2013;12:31:2013;60;[0;22:00:00;9;1;6;];[0;22:00:00;4;5;6;];][01:01:2014;12:31:2014;60;[0;22:00:00;9;1;6;];[0;22:00:00;4;5;6;];][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2016;12:31:2016;60;[0;22:00:00;8;2;6;];[0;22:00:00;5;2;6;];][01:01:2017;12:31:2017;60;[0;22:00:00;8;2;6;];[0;22:00:00;5;2;6;];][01:01:2018;12:31:2018;60;[0;22:00:00;8;2;6;];[0;22:00:00;5;2;6;];][01:01:2019;12:31:9999;60;[0;22:00:00;9;1;6;];[0;22:00:00;4;1;6;];];";
                    break;
                case StandardTimeZone.CentralMexico:
                    serializedString = @"Central Standard Time (Mexico);-360;(UTC-06:00) Guadalajara, Mexico City, Monterrey;Central Standard Time (Mexico);Central Daylight Time (Mexico);[01:01:0001;12:31:9999;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.CanadaCentral:
                    serializedString = @"Canada Central Standard Time;-360;(UTC-06:00) Saskatchewan;Canada Central Standard Time;Canada Central Daylight Time;;";
                    break;
                case StandardTimeZone.SouthAmericaPacific:
                    serializedString = @"SA Pacific Standard Time;-300;(UTC-05:00) Bogota, Lima, Quito, Rio Branco;SA Pacific Standard Time;SA Pacific Daylight Time;;";
                    break;
                case StandardTimeZone.EasternMexico:
                    serializedString = @"Eastern Standard Time (Mexico);-300;(UTC-05:00) Chetumal;Eastern Standard Time (Mexico);Eastern Daylight Time (Mexico);[01:01:0001;12:31:2014;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;60;[0;02:00:00;2;1;0;];[0;00:00:00;1;1;4;];-60;];";
                    break;
                case StandardTimeZone.Eastern:
                    serializedString = @"Eastern Standard Time;-300;(UTC-05:00) Eastern Time (US & Canada);Eastern Standard Time;Eastern Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Haiti:
                    serializedString = @"Haiti Standard Time;-300;(UTC-05:00) Haiti;Haiti Standard Time;Haiti Daylight Time;[01:01:0001;12:31:2006;60;[0;23:59:59.999;4;1;6;];[0;23:59:59.999;10;5;6;];][01:01:2012;12:31:2012;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];][01:01:2013;12:31:2013;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];][01:01:2014;12:31:2014;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];][01:01:2015;12:31:2015;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];][01:01:2017;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Cuba:
                    serializedString = @"Cuba Standard Time;-300;(UTC-05:00) Havana;Cuba Standard Time;Cuba Daylight Time;[01:01:0001;12:31:2003;60;[0;00:00:00;4;1;0;];[0;01:00:00;10;5;0;];][01:01:2004;12:31:2004;60;[0;00:00:00;3;5;0;];[0;00:00:00;1;1;4;];][01:01:2005;12:31:2005;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2006;12:31:2006;60;[0;00:00:00;1;1;0;];[0;01:00:00;10;5;0;];][01:01:2007;12:31:2007;60;[0;00:00:00;3;2;0;];[0;01:00:00;10;5;0;];][01:01:2008;12:31:2008;60;[0;00:00:00;3;3;0;];[0;01:00:00;10;5;0;];][01:01:2009;12:31:2009;60;[0;00:00:00;3;2;0;];[0;01:00:00;10;5;0;];][01:01:2010;12:31:2010;60;[0;00:00:00;3;2;0;];[0;01:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;00:00:00;3;3;0;];[0;01:00:00;11;2;0;];][01:01:2012;12:31:2012;60;[0;00:00:00;4;1;0;];[0;01:00:00;11;1;0;];][01:01:2013;12:31:9999;60;[0;00:00:00;3;2;0;];[0;01:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.UnitedStatesEastern:
                    serializedString = @"US Eastern Standard Time;-300;(UTC-05:00) Indiana (East);US Eastern Standard Time;US Eastern Daylight Time;[01:01:2006;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.TurksAndCaicos:
                    serializedString = @"Turks And Caicos Standard Time;-300;(UTC-05:00) Turks and Caicos;Turks and Caicos Standard Time;Turks and Caicos Daylight Time;[01:01:0001;12:31:2014;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];][01:01:2015;12:31:2015;60;[0;02:00:00;3;2;0;];[0;00:00:00;1;1;4;];][01:01:2016;12:31:2016;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2017;12:31:2017;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2018;12:31:2018;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];][01:01:2019;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Paraguay:
                    serializedString = @"Paraguay Standard Time;-240;(UTC-04:00) Asuncion;Paraguay Standard Time;Paraguay Daylight Time;[01:01:0001;12:31:2008;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;3;2;6;];][01:01:2009;12:31:2009;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;3;1;6;];][01:01:2010;12:31:2010;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;4;2;6;];][01:01:2011;12:31:2011;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;4;2;6;];][01:01:2012;12:31:2012;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;4;1;6;];][01:01:2013;12:31:2013;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;4;6;];][01:01:2014;12:31:2014;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;4;6;];][01:01:2015;12:31:2015;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;3;6;];][01:01:2016;12:31:2016;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;5;6;];][01:01:2017;12:31:2017;60;[0;23:59:59.999;9;5;6;];[0;23:59:59.999;3;5;6;];][01:01:2018;12:31:2018;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;4;6;];][01:01:2019;12:31:2019;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;4;6;];][01:01:2020;12:31:2020;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;3;6;];][01:01:2021;12:31:2021;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;5;6;];][01:01:2022;12:31:2022;60;[0;23:59:59.999;10;1;6;];[0;23:59:59.999;3;5;6;];][01:01:2023;12:31:9999;60;[0;00:00:00;10;1;0;];[0;00:00:00;3;4;0;];];";
                    break;
                case StandardTimeZone.Atlantic:
                    serializedString = @"Atlantic Standard Time;-240;(UTC-04:00) Atlantic Time (Canada);Atlantic Standard Time;Atlantic Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Venezuela:
                    serializedString = @"Venezuela Standard Time;-240;(UTC-04:00) Caracas;Venezuela Standard Time;Venezuela Daylight Time;[01:01:2007;12:31:2007;30;[0;00:00:00;1;1;1;];[0;03:00:00;12;2;0;];-30;][01:01:2008;12:31:2008;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2009;12:31:2009;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2010;12:31:2010;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2011;12:31:2011;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2014;12:31:2014;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2016;12:31:2016;-30;[0;00:00:00;1;1;5;];[0;02:30:00;5;1;0;];];";
                    break;
                case StandardTimeZone.CentralBrazilian:
                    serializedString = @"Central Brazilian Standard Time;-240;(UTC-04:00) Cuiaba;Central Brazilian Standard Time;Central Brazilian Daylight Time;[01:01:0001;12:31:2004;60;[0;00:00:00;11;1;2;];[0;00:00:00;1;1;4;];][01:01:2005;12:31:2005;60;[0;00:00:00;10;3;0;];[0;23:59:59.999;2;3;6;];][01:01:2006;12:31:2006;60;[0;00:00:00;11;1;0;];[0;23:59:59.999;2;3;6;];][01:01:2007;12:31:2007;60;[0;00:00:00;10;2;0;];[0;23:59:59.999;2;5;6;];][01:01:2008;12:31:2008;60;[0;00:00:00;10;3;0;];[0;23:59:59.999;2;3;6;];][01:01:2009;12:31:2009;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;2;6;];][01:01:2010;12:31:2010;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2011;12:31:2011;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2012;12:31:2012;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;4;6;];][01:01:2013;12:31:2013;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2014;12:31:2014;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2015;12:31:2015;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2016;12:31:2016;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2017;12:31:2017;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;2;3;6;];][01:01:2018;12:31:2018;60;[0;23:59:59.999;11;1;6;];[0;23:59:59.999;2;3;6;];][01:01:2019;12:31:2019;60;[0;00:00:00;1;1;2;];[0;00:00:00;2;3;0;];];";
                    break;
                case StandardTimeZone.SouthAmericaWestern:
                    serializedString = @"SA Western Standard Time;-240;(UTC-04:00) Georgetown, La Paz, Manaus, San Juan;SA Western Standard Time;SA Western Daylight Time;;";
                    break;
                case StandardTimeZone.PacificSouthAmerica:
                    serializedString = @"Pacific SA Standard Time;-240;(UTC-04:00) Santiago;Pacific SA Standard Time;Pacific SA Daylight Time;[01:01:0001;12:31:2007;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;3;2;6;];][01:01:2008;12:31:2008;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;3;5;6;];][01:01:2009;12:31:2009;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;3;2;6;];][01:01:2010;12:31:2010;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;4;1;6;];][01:01:2011;12:31:2011;60;[0;23:59:59.999;8;3;6;];[0;23:59:59.999;5;1;6;];][01:01:2012;12:31:2012;60;[0;23:59:59.999;9;1;6;];[0;23:59:59.999;4;5;6;];][01:01:2013;12:31:2013;60;[0;23:59:59.999;9;1;6;];[0;23:59:59.999;4;5;6;];][01:01:2014;12:31:2014;60;[0;23:59:59.999;9;1;6;];[0;23:59:59.999;4;5;6;];][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2016;12:31:2016;60;[0;23:59:59.999;8;2;6;];[0;23:59:59.999;5;2;6;];][01:01:2017;12:31:2017;60;[0;23:59:59.999;8;2;6;];[0;23:59:59.999;5;2;6;];][01:01:2018;12:31:2018;60;[0;23:59:59.999;8;2;6;];[0;23:59:59.999;5;2;6;];][01:01:2019;12:31:9999;60;[0;23:59:59.999;9;1;6;];[0;23:59:59.999;4;1;6;];];";
                    break;
                case StandardTimeZone.Newfoundland:
                    serializedString = @"Newfoundland Standard Time;-210;(UTC-03:30) Newfoundland;Newfoundland Standard Time;Newfoundland Daylight Time;[01:01:0001;12:31:2006;60;[0;00:01:00;4;1;0;];[0;00:01:00;10;5;0;];][01:01:2007;12:31:2007;60;[0;00:01:00;3;2;0;];[0;00:01:00;11;1;0;];][01:01:2008;12:31:2008;60;[0;00:01:00;3;2;0;];[0;00:01:00;11;1;0;];][01:01:2009;12:31:2009;60;[0;00:01:00;3;2;0;];[0;00:01:00;11;1;0;];][01:01:2010;12:31:2010;60;[0;00:01:00;3;2;0;];[0;00:01:00;11;1;0;];][01:01:2011;12:31:2011;60;[0;00:01:00;3;2;0;];[0;02:00:00;11;1;0;];][01:01:2012;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Tocantins:
                    serializedString = @"Tocantins Standard Time;-180;(UTC-03:00) Araguaina;Tocantins Standard Time;Tocantins Daylight Time;[01:01:2012;12:31:2012;60;[0;00:00:00;10;3;0;];[0;00:00:00;1;1;0;];][01:01:2013;12:31:2013;60;[0;00:00:00;1;1;2;];[0;23:59:59.999;2;3;6;];];";
                    break;
                case StandardTimeZone.EasternSouthAmerica:
                    serializedString = @"E. South America Standard Time;-180;(UTC-03:00) Brasilia;E. South America Standard Time;E. South America Daylight Time;[01:01:0001;12:31:2004;60;[0;00:00:00;11;1;2;];[0;23:59:59.999;2;2;6;];][01:01:2005;12:31:2005;60;[0;00:00:00;10;3;0;];[0;23:59:59.999;2;3;6;];][01:01:2006;12:31:2006;60;[0;00:00:00;11;1;0;];[0;23:59:59.999;2;3;6;];][01:01:2007;12:31:2007;60;[0;00:00:00;10;2;0;];[0;23:59:59.999;2;5;6;];][01:01:2008;12:31:2008;60;[0;00:00:00;10;3;0;];[0;23:59:59.999;2;3;6;];][01:01:2009;12:31:2009;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;2;6;];][01:01:2010;12:31:2010;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2011;12:31:2011;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2012;12:31:2012;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;4;6;];][01:01:2013;12:31:2013;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2014;12:31:2014;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2015;12:31:2015;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2016;12:31:2016;60;[0;23:59:59.999;10;3;6;];[0;23:59:59.999;2;3;6;];][01:01:2017;12:31:2017;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;2;3;6;];][01:01:2018;12:31:2018;60;[0;23:59:59.999;11;1;6;];[0;23:59:59.999;2;3;6;];][01:01:2019;12:31:2019;60;[0;00:00:00;1;1;2;];[0;00:00:00;2;3;0;];];";
                    break;
                case StandardTimeZone.SouthAmericaEastern:
                    serializedString = @"SA Eastern Standard Time;-180;(UTC-03:00) Cayenne, Fortaleza;SA Eastern Standard Time;SA Eastern Daylight Time;;";
                    break;
                case StandardTimeZone.Argentina:
                    serializedString = @"Argentina Standard Time;-180;(UTC-03:00) City of Buenos Aires;Argentina Standard Time;Argentina Daylight Time;[01:01:2007;12:31:2007;60;[0;00:00:00;12;5;0;];[0;00:00:00;1;1;1;];][01:01:2008;12:31:2008;60;[0;23:59:59.999;10;3;6;];[0;00:00:00;3;3;0;];][01:01:2009;12:31:2009;60;[0;00:00:00;1;1;4;];[0;23:59:59.999;3;2;6;];];";
                    break;
                case StandardTimeZone.Greenland:
                    serializedString = @"Greenland Standard Time;-180;(UTC-03:00) Greenland;Greenland Standard Time;Greenland Daylight Time;[01:01:0001;12:31:2004;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2005;12:31:2005;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2006;12:31:2006;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2007;12:31:2007;60;[0;22:00:00;3;4;6;];[0;23:00:00;10;5;6;];][01:01:2008;12:31:2008;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2009;12:31:2009;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;4;6;];][01:01:2010;12:31:2010;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2011;12:31:2011;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2012;12:31:2012;60;[0;22:00:00;3;4;6;];[0;23:00:00;10;5;6;];][01:01:2013;12:31:2013;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2014;12:31:2014;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2015;12:31:2015;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;4;6;];][01:01:2016;12:31:2016;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2017;12:31:2017;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2018;12:31:2018;60;[0;22:00:00;3;4;6;];[0;23:00:00;10;5;6;];][01:01:2019;12:31:2019;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];][01:01:2020;12:31:2020;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;4;6;];][01:01:2021;12:31:9999;60;[0;22:00:00;3;5;6;];[0;23:00:00;10;5;6;];];";
                    break;
                case StandardTimeZone.Montevideo:
                    serializedString = @"Montevideo Standard Time;-180;(UTC-03:00) Montevideo;Montevideo Standard Time;Montevideo Daylight Time;[01:01:0001;12:31:2014;60;[0;02:00:00;10;1;0;];[0;02:00:00;3;2;0;];][01:01:2015;12:31:2015;60;[0;00:00:00;1;1;4;];[0;02:00:00;3;2;0;];];";
                    break;
                case StandardTimeZone.Magallanes:
                    serializedString = @"Magallanes Standard Time;-180;(UTC-03:00) Punta Arenas;Magallanes Standard Time;Magallanes Daylight Time;[01:01:0001;12:31:2007;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;3;2;6;];-60;][01:01:2008;12:31:2008;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;3;5;6;];-60;][01:01:2009;12:31:2009;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;3;2;6;];-60;][01:01:2010;12:31:2010;60;[0;23:59:59.999;10;2;6;];[0;23:59:59.999;4;1;6;];-60;][01:01:2011;12:31:2011;60;[0;23:59:59.999;8;3;6;];[0;23:59:59.999;5;1;6;];-60;][01:01:2012;12:31:2012;60;[0;23:59:59.999;9;1;6;];[0;23:59:59.999;4;5;6;];-60;][01:01:2013;12:31:2013;60;[0;23:59:59.999;9;1;6;];[0;23:59:59.999;4;5;6;];-60;][01:01:2014;12:31:2014;60;[0;23:59:59.999;9;1;6;];[0;23:59:59.999;4;5;6;];-60;][01:01:2016;12:31:2016;60;[0;23:59:59.999;8;2;6;];[0;23:59:59.999;5;2;6;];-60;];";
                    break;
                case StandardTimeZone.SaintPierre:
                    serializedString = @"Saint Pierre Standard Time;-180;(UTC-03:00) Saint Pierre and Miquelon;Saint Pierre Standard Time;Saint Pierre Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];";
                    break;
                case StandardTimeZone.Bahia:
                    serializedString = @"Bahia Standard Time;-180;(UTC-03:00) Salvador;Bahia Standard Time;Bahia Daylight Time;[01:01:2011;12:31:2011;60;[0;23:59:59.999;10;3;6;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;60;[0;00:00:00;1;1;0;];[0;23:59:59.999;2;4;6;];];";
                    break;
                case StandardTimeZone.MidAtlantic:
                    serializedString = @"Mid-Atlantic Standard Time;-120;(UTC-02:00) Mid-Atlantic - Old;Mid-Atlantic Standard Time;Mid-Atlantic Daylight Time;[01:01:0001;12:31:9999;60;[0;02:00:00;3;5;0;];[0;02:00:00;9;5;0;];];";
                    break;
                case StandardTimeZone.Azores:
                    serializedString = @"Azores Standard Time;-60;(UTC-01:00) Azores;Azores Standard Time;Azores Daylight Time;[01:01:0001;12:31:9999;60;[0;00:00:00;3;5;0;];[0;01:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.CapeVerde:
                    serializedString = @"Cape Verde Standard Time;-60;(UTC-01:00) Cabo Verde Is.;Cabo Verde Standard Time;Cabo Verde Daylight Time;;";
                    break;
                case StandardTimeZone.Gmt:
                    serializedString = @"GMT Standard Time;0;(UTC+00:00) Dublin, Edinburgh, Lisbon, London;GMT Standard Time;GMT Daylight Time;[01:01:0001;12:31:9999;60;[0;01:00:00;3;5;0;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Greenwich:
                    serializedString = @"Greenwich Standard Time;0;(UTC+00:00) Monrovia, Reykjavik;Greenwich Standard Time;Greenwich Daylight Time;;";
                    break;
                case StandardTimeZone.SaoTome:
                    serializedString = @"Sao Tome Standard Time;0;(UTC+00:00) Sao Tome;Sao Tome Standard Time;Sao Tome Daylight Time;[01:01:2018;12:31:2018;-60;[0;00:00:00;1;1;1;];[0;01:00:00;1;1;1;];60;][01:01:2019;12:31:2019;60;[0;00:00:00;1;1;2;];[0;02:00:00;1;1;2;];];";
                    break;
                case StandardTimeZone.Morocco:
                    serializedString = @"Morocco Standard Time;0;(UTC+01:00) Casablanca;Morocco Standard Time;Morocco Daylight Time;[01:01:2008;12:31:2008;60;[0;23:59:59.999;5;5;6;];[0;23:59:59.999;8;5;0;];][01:01:2009;12:31:2009;60;[0;23:59:59.999;5;5;0;];[0;23:59:59.999;8;3;4;];][01:01:2010;12:31:2010;60;[0;23:59:59.999;5;1;6;];[0;23:59:59.999;8;1;6;];][01:01:2011;12:31:2011;60;[0;23:59:59.999;4;1;6;];[0;23:59:59.999;7;5;6;];][01:01:2012;12:31:2012;60;[0;02:00:00;4;5;0;];[0;03:00:00;9;5;0;];][01:01:2013;12:31:2013;60;[0;02:00:00;4;5;0;];[0;03:00:00;10;5;0;];][01:01:2014;12:31:2014;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2015;12:31:2015;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2016;12:31:2016;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2017;12:31:2017;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2018;12:31:2018;60;[0;02:00:00;3;4;0;];[0;03:00:00;10;4;0;];][01:01:2019;12:31:2019;60;[0;02:00:00;6;2;0;];[0;00:00:00;1;1;2;];][01:01:2020;12:31:2020;60;[0;02:00:00;5;5;0;];[0;03:00:00;4;3;0;];][01:01:2021;12:31:2021;60;[0;02:00:00;5;3;0;];[0;03:00:00;4;2;0;];][01:01:2022;12:31:2022;60;[0;02:00:00;5;2;0;];[0;03:00:00;3;5;0;];][01:01:2023;12:31:2023;60;[0;02:00:00;4;4;0;];[0;03:00:00;3;3;0;];][01:01:2024;12:31:2024;60;[0;02:00:00;4;2;0;];[0;03:00:00;3;2;0;];][01:01:2025;12:31:2025;60;[0;02:00:00;4;1;0;];[0;03:00:00;2;5;0;];][01:01:2026;12:31:2026;60;[0;02:00:00;3;4;0;];[0;03:00:00;2;3;0;];][01:01:2027;12:31:2027;60;[0;02:00:00;3;2;0;];[0;03:00:00;2;1;0;];][01:01:2028;12:31:2028;60;[0;02:00:00;3;1;0;];[0;03:00:00;1;4;0;];][01:01:2029;12:31:9999;60;[0;02:00:00;2;3;0;];[0;03:00:00;1;2;0;];];";
                    break;
                case StandardTimeZone.WesternEurope:
                    serializedString = @"W. Europe Standard Time;60;(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna;W. Europe Standard Time;W. Europe Daylight Time;[01:01:0001;12:31:9999;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.CentralEurope:
                    serializedString = @"Central Europe Standard Time;60;(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague;Central Europe Standard Time;Central Europe Daylight Time;[01:01:0001;12:31:9999;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Romance:
                    serializedString = @"Romance Standard Time;60;(UTC+01:00) Brussels, Copenhagen, Madrid, Paris;Romance Standard Time;Romance Daylight Time;[01:01:0001;12:31:9999;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.CentralEuropean:
                    serializedString = @"Central European Standard Time;60;(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb;Central European Standard Time;Central European Daylight Time;[01:01:0001;12:31:9999;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.WesternCentralAfrica:
                    serializedString = @"W. Central Africa Standard Time;60;(UTC+01:00) West Central Africa;W. Central Africa Standard Time;W. Central Africa Daylight Time;;";
                    break;
                case StandardTimeZone.Jordan:
                    serializedString = @"Jordan Standard Time;120;(UTC+02:00) Amman;Jordan Standard Time;Jordan Daylight Time;[01:01:0001;12:31:2011;60;[0;23:59:59.999;3;5;4;];[0;01:00:00;10;5;5;];][01:01:2012;12:31:2012;60;[0;23:59:59.999;3;5;4;];[0;00:00:00;1;1;0;];][01:01:2013;12:31:2013;60;[0;00:00:00;1;1;2;];[0;00:00:00;12;3;5;];][01:01:2014;12:31:9999;60;[0;23:59:59.999;3;5;4;];[0;01:00:00;10;5;5;];];";
                    break;
                case StandardTimeZone.Gtb:
                    serializedString = @"GTB Standard Time;120;(UTC+02:00) Athens, Bucharest;GTB Standard Time;GTB Daylight Time;[01:01:0001;12:31:9999;60;[0;03:00:00;3;5;0;];[0;04:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.MiddleEast:
                    serializedString = @"Middle East Standard Time;120;(UTC+02:00) Beirut;Middle East Standard Time;Middle East Daylight Time;[01:01:0001;12:31:2009;60;[0;00:00:00;3;5;0;];[0;00:00:00;10;5;0;];][01:01:2010;12:31:2010;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;5;6;];][01:01:2011;12:31:2011;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;5;6;];][01:01:2012;12:31:2012;60;[0;23:59:59.999;3;4;6;];[0;23:59:59.999;10;5;6;];][01:01:2013;12:31:2013;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;5;6;];][01:01:2014;12:31:2014;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;5;6;];][01:01:2015;12:31:2015;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;4;6;];][01:01:2016;12:31:2016;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;5;6;];][01:01:2017;12:31:2017;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;5;6;];][01:01:2018;12:31:2018;60;[0;23:59:59.999;3;4;6;];[0;23:59:59.999;10;5;6;];][01:01:2019;12:31:2019;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;5;6;];][01:01:2020;12:31:2020;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;4;6;];][01:01:2021;12:31:9999;60;[0;23:59:59.999;3;5;6;];[0;23:59:59.999;10;5;6;];];";
                    break;
                case StandardTimeZone.Egypt:
                    serializedString = @"Egypt Standard Time;120;(UTC+02:00) Cairo;Egypt Standard Time;Egypt Daylight Time;[01:01:0001;12:31:2005;60;[0;00:00:00;4;5;5;];[0;23:59:59.999;9;5;4;];][01:01:2006;12:31:2006;60;[0;00:00:00;4;5;5;];[0;23:59:59.999;9;3;4;];][01:01:2007;12:31:2007;60;[0;23:59:59.999;4;5;4;];[0;23:59:59.999;9;1;4;];][01:01:2008;12:31:2008;60;[0;23:59:59.999;4;5;4;];[0;23:59:59.999;8;5;4;];][01:01:2009;12:31:2009;60;[0;23:59:59.999;4;4;4;];[0;23:59:59.999;8;3;4;];][01:01:2010;12:31:2010;60;[0;23:59:59.999;4;5;4;];[0;23:59:59.999;9;5;4;];][01:01:2014;12:31:2014;60;[0;23:59:59.999;5;3;4;];[0;23:59:59.999;9;5;4;];];";
                    break;
                case StandardTimeZone.EasternEurope:
                    serializedString = @"E. Europe Standard Time;120;(UTC+02:00) Chisinau;E. Europe Standard Time;E. Europe Daylight Time;[01:01:0001;12:31:9999;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Syria:
                    serializedString = @"Syria Standard Time;120;(UTC+02:00) Damascus;Syria Standard Time;Syria Daylight Time;[01:01:0001;12:31:2004;60;[0;00:00:00;4;1;4;];[0;23:59:59.999;9;5;4;];][01:01:2005;12:31:2005;60;[0;00:00:00;4;1;5;];[0;23:59:59.999;9;5;5;];][01:01:2006;12:31:2006;60;[0;00:00:00;4;1;6;];[0;23:59:59.999;9;3;4;];][01:01:2007;12:31:2007;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;11;1;4;];][01:01:2008;12:31:2008;60;[0;00:00:00;4;1;5;];[0;23:59:59.999;10;5;5;];][01:01:2009;12:31:2009;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;5;4;];][01:01:2010;12:31:2010;60;[0;00:00:00;4;1;5;];[0;23:59:59.999;10;5;4;];][01:01:2011;12:31:2011;60;[0;00:00:00;4;1;5;];[0;23:59:59.999;10;5;4;];][01:01:2012;12:31:2012;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;5;4;];][01:01:2013;12:31:2013;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;4;4;];][01:01:2014;12:31:2014;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;5;4;];][01:01:2015;12:31:2015;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;5;4;];][01:01:2016;12:31:2016;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;5;4;];][01:01:2017;12:31:2017;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;5;4;];][01:01:2018;12:31:2018;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;5;4;];][01:01:2019;12:31:2019;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;4;4;];][01:01:2020;12:31:9999;60;[0;00:00:00;3;5;5;];[0;23:59:59.999;10;5;4;];];";
                    break;
                case StandardTimeZone.WestBank:
                    serializedString = @"West Bank Standard Time;120;(UTC+02:00) Gaza, Hebron;West Bank Gaza Standard Time;West Bank Gaza Daylight Time;[01:01:0001;12:31:2012;60;[0;23:59:59.999;3;5;4;];[0;01:00:00;9;3;5;];][01:01:2013;12:31:2013;60;[0;23:59:59.999;3;5;4;];[0;23:59:59.999;9;5;4;];][01:01:2014;12:31:2014;60;[0;23:59:59.999;3;5;4;];[0;23:59:59.999;10;4;4;];][01:01:2015;12:31:2015;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;4;5;];][01:01:2016;12:31:2016;60;[0;01:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2017;12:31:2017;60;[0;01:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2018;12:31:2018;60;[0;01:00:00;3;4;6;];[0;01:00:00;10;5;6;];][01:01:2019;12:31:2019;60;[0;00:00:00;3;5;5;];[0;00:00:00;10;4;6;];][01:01:2020;12:31:2020;60;[0;00:00:00;3;4;6;];[0;01:00:00;10;4;6;];][01:01:2021;12:31:2021;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2022;12:31:2022;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2023;12:31:2023;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2024;12:31:2024;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2025;12:31:2025;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2026;12:31:2026;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;4;6;];][01:01:2027;12:31:2027;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2028;12:31:2028;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;5;6;];][01:01:2029;12:31:2029;60;[0;00:00:00;3;4;6;];[0;01:00:00;10;5;6;];][01:01:2030;12:31:9999;60;[0;00:00:00;3;5;6;];[0;01:00:00;10;5;6;];];";
                    break;
                case StandardTimeZone.SouthAfrica:
                    serializedString = @"South Africa Standard Time;120;(UTC+02:00) Harare, Pretoria;South Africa Standard Time;South Africa Daylight Time;;";
                    break;
                case StandardTimeZone.Fle:
                    serializedString = @"FLE Standard Time;120;(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius;FLE Standard Time;FLE Daylight Time;[01:01:0001;12:31:9999;60;[0;03:00:00;3;5;0;];[0;04:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Israel:
                    serializedString = @"Israel Standard Time;120;(UTC+02:00) Jerusalem;Jerusalem Standard Time;Jerusalem Daylight Time;[01:01:0001;12:31:2004;60;[0;01:00:00;4;1;3;];[0;01:00:00;9;4;3;];][01:01:2005;12:31:2005;60;[0;02:00:00;4;1;5;];[0;02:00:00;10;2;0;];][01:01:2006;12:31:2006;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;1;0;];][01:01:2007;12:31:2007;60;[0;02:00:00;3;5;5;];[0;02:00:00;9;3;0;];][01:01:2008;12:31:2008;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;1;0;];][01:01:2009;12:31:2009;60;[0;02:00:00;3;5;5;];[0;02:00:00;9;5;0;];][01:01:2010;12:31:2010;60;[0;02:00:00;3;5;5;];[0;02:00:00;9;2;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;4;1;5;];[0;02:00:00;10;1;0;];][01:01:2012;12:31:2012;60;[0;02:00:00;3;5;5;];[0;02:00:00;9;4;0;];][01:01:2013;12:31:2013;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;5;0;];][01:01:2014;12:31:2014;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;5;0;];][01:01:2015;12:31:2015;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;5;0;];][01:01:2016;12:31:2016;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;5;0;];][01:01:2017;12:31:2017;60;[0;02:00:00;3;4;5;];[0;02:00:00;10;5;0;];][01:01:2018;12:31:2018;60;[0;02:00:00;3;4;5;];[0;02:00:00;10;5;0;];][01:01:2019;12:31:2019;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;5;0;];][01:01:2020;12:31:2020;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;5;0;];][01:01:2021;12:31:2021;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;5;0;];][01:01:2022;12:31:2022;60;[0;02:00:00;3;5;5;];[0;02:00:00;10;5;0;];][01:01:2023;12:31:9999;60;[0;02:00:00;3;4;5;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.SouthSudan:
                    serializedString = @"South Sudan Standard Time;120;(UTC+02:00) Juba;South Sudan Standard Time;South Sudan Daylight Time;[01:01:0001;12:31:2020;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2021;12:31:2021;60;[0;00:00:00;1;1;5;];[0;23:59:59.999;1;5;0;];];";
                    break;
                case StandardTimeZone.Kaliningrad:
                    serializedString = @"Kaliningrad Standard Time;120;(UTC+02:00) Kaliningrad;Russia TZ 1 Standard Time;Russia TZ 1 Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Sudan:
                    serializedString = @"Sudan Standard Time;120;(UTC+02:00) Khartoum;Sudan Standard Time;Sudan Daylight Time;[01:01:0001;12:31:2016;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2017;12:31:2017;60;[0;00:00:00;1;1;0;];[0;23:59:59.999;10;5;2;];];";
                    break;
                case StandardTimeZone.Libya:
                    serializedString = @"Libya Standard Time;120;(UTC+02:00) Tripoli;Libya Standard Time;Libya Daylight Time;[01:01:2012;12:31:2012;60;[0;00:00:00;1;1;0;];[0;02:00:00;11;2;6;];-60;][01:01:2013;12:31:2013;60;[0;01:00:00;3;5;5;];[0;00:00:00;1;1;2;];-60;];";
                    break;
                case StandardTimeZone.Namibia:
                    serializedString = @"Namibia Standard Time;120;(UTC+02:00) Windhoek;Namibia Standard Time;Namibia Daylight Time;[01:01:0001;12:31:2017;60;[0;02:00:00;9;1;0;];[0;02:00:00;4;1;0;];-60;];";
                    break;
                case StandardTimeZone.Arabic:
                    serializedString = @"Arabic Standard Time;180;(UTC+03:00) Baghdad;Arabic Standard Time;Arabic Daylight Time;[01:01:0001;12:31:2004;60;[0;03:00:00;4;1;4;];[0;04:00:00;10;1;5;];][01:01:2005;12:31:2005;60;[0;03:00:00;4;1;5;];[0;04:00:00;10;1;6;];][01:01:2006;12:31:2006;60;[0;03:00:00;4;1;6;];[0;04:00:00;10;1;0;];][01:01:2007;12:31:2007;60;[0;03:00:00;4;1;0;];[0;04:00:00;10;1;1;];];";
                    break;
                case StandardTimeZone.Turkey:
                    serializedString = @"Turkey Standard Time;180;(UTC+03:00) Istanbul;Turkey Standard Time;Turkey Daylight Time;[01:01:0001;12:31:2010;60;[0;03:00:00;3;5;0;];[0;04:00:00;10;5;0;];-60;][01:01:2011;12:31:2011;60;[0;03:00:00;3;5;1;];[0;04:00:00;10;5;0;];-60;][01:01:2012;12:31:2012;60;[0;03:00:00;3;5;0;];[0;04:00:00;10;5;0;];-60;][01:01:2013;12:31:2013;60;[0;03:00:00;3;5;0;];[0;04:00:00;10;5;0;];-60;][01:01:2014;12:31:2014;60;[0;03:00:00;3;5;1;];[0;04:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;60;[0;03:00:00;3;5;0;];[0;04:00:00;11;2;0;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;03:00:00;3;5;0;];];";
                    break;
                case StandardTimeZone.Arab:
                    serializedString = @"Arab Standard Time;180;(UTC+03:00) Kuwait, Riyadh;Arab Standard Time;Arab Daylight Time;;";
                    break;
                case StandardTimeZone.Belarus:
                    serializedString = @"Belarus Standard Time;180;(UTC+03:00) Minsk;Belarus Standard Time;Belarus Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];-60;][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];-60;];";
                    break;
                case StandardTimeZone.Russian:
                    serializedString = @"Russian Standard Time;180;(UTC+03:00) Moscow, St. Petersburg;Russia TZ 2 Standard Time;Russia TZ 2 Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.EasternAfrica:
                    serializedString = @"E. Africa Standard Time;180;(UTC+03:00) Nairobi;E. Africa Standard Time;E. Africa Daylight Time;;";
                    break;
                case StandardTimeZone.Volgograd:
                    serializedString = @"Volgograd Standard Time;180;(UTC+03:00) Volgograd;Volgograd Standard Time;Volgograd Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];][01:01:2018;12:31:2018;-60;[0;00:00:00;1;1;1;];[0;02:00:00;10;5;0;];60;][01:01:2019;12:31:2019;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2020;12:31:2020;60;[0;00:00:00;1;1;3;];[0;02:00:00;12;5;0;];60;];";
                    break;
                case StandardTimeZone.Iran:
                    serializedString = @"Iran Standard Time;210;(UTC+03:30) Tehran;Iran Standard Time;Iran Daylight Time;[01:01:0001;12:31:2004;60;[0;00:00:00;3;3;0;];[0;23:59:59.999;9;3;1;];][01:01:2005;12:31:2005;60;[0;00:00:00;3;4;2;];[0;23:59:59.999;9;3;3;];][01:01:2008;12:31:2008;60;[0;00:00:00;3;3;5;];[0;23:59:59.999;9;3;6;];][01:01:2009;12:31:2009;60;[0;00:00:00;3;4;0;];[0;23:59:59.999;9;3;1;];][01:01:2010;12:31:2010;60;[0;00:00:00;3;4;1;];[0;23:59:59.999;9;3;2;];][01:01:2011;12:31:2011;60;[0;00:00:00;3;4;2;];[0;23:59:59.999;9;3;3;];][01:01:2012;12:31:2012;60;[0;00:00:00;3;3;3;];[0;23:59:59.999;9;3;4;];][01:01:2013;12:31:2013;60;[0;00:00:00;3;4;5;];[0;23:59:59.999;9;3;6;];][01:01:2014;12:31:2014;60;[0;00:00:00;3;4;6;];[0;23:59:59.999;9;3;0;];][01:01:2015;12:31:2015;60;[0;00:00:00;3;4;0;];[0;23:59:59.999;9;3;1;];][01:01:2016;12:31:2016;60;[0;00:00:00;3;3;1;];[0;23:59:59.999;9;3;2;];][01:01:2017;12:31:2017;60;[0;00:00:00;3;4;3;];[0;23:59:59.999;9;3;4;];][01:01:2018;12:31:2018;60;[0;00:00:00;3;4;4;];[0;23:59:59.999;9;3;5;];][01:01:2019;12:31:2019;60;[0;00:00:00;3;4;5;];[0;23:59:59.999;9;3;6;];][01:01:2020;12:31:2020;60;[0;00:00:00;3;3;6;];[0;23:59:59.999;9;3;0;];][01:01:2021;12:31:2021;60;[0;00:00:00;3;4;1;];[0;23:59:59.999;9;3;2;];][01:01:2022;12:31:2022;60;[0;00:00:00;3;4;2;];[0;23:59:59.999;9;3;3;];][01:01:2023;12:31:2023;60;[0;00:00:00;3;4;3;];[0;23:59:59.999;9;3;4;];][01:01:2024;12:31:9999;60;[0;00:00:00;3;3;4;];[0;23:59:59.999;9;3;5;];];";
                    break;
                case StandardTimeZone.Arabian:
                    serializedString = @"Arabian Standard Time;240;(UTC+04:00) Abu Dhabi, Muscat;Arabian Standard Time;Arabian Daylight Time;;";
                    break;
                case StandardTimeZone.Astrakhan:
                    serializedString = @"Astrakhan Standard Time;240;(UTC+04:00) Astrakhan, Ulyanovsk;Astrakhan Standard Time;Astrakhan Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];-60;][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];-60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;02:00:00;3;5;0;];];";
                    break;
                case StandardTimeZone.Azerbaijan:
                    serializedString = @"Azerbaijan Standard Time;240;(UTC+04:00) Baku;Azerbaijan Standard Time;Azerbaijan Daylight Time;[01:01:0001;12:31:2015;60;[0;04:00:00;3;5;0;];[0;05:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Mauritius:
                    serializedString = @"Mauritius Standard Time;240;(UTC+04:00) Port Louis;Mauritius Standard Time;Mauritius Daylight Time;[01:01:2008;12:31:2008;60;[0;02:00:00;10;5;0;];[0;00:00:00;1;1;2;];][01:01:2009;12:31:2009;60;[0;00:00:00;1;1;4;];[0;02:00:00;3;5;0;];];";
                    break;
                case StandardTimeZone.Saratov:
                    serializedString = @"Saratov Standard Time;240;(UTC+04:00) Saratov;Saratov Standard Time;Saratov Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];-60;][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];-60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;02:00:00;12;1;0;];];";
                    break;
                case StandardTimeZone.Georgian:
                    serializedString = @"Georgian Standard Time;240;(UTC+04:00) Tbilisi;Georgian Standard Time;Georgian Daylight Time;;";
                    break;
                case StandardTimeZone.Caucasus:
                    serializedString = @"Caucasus Standard Time;240;(UTC+04:00) Yerevan;Caucasus Standard Time;Caucasus Daylight Time;[01:01:0001;12:31:2011;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Afghanistan:
                    serializedString = @"Afghanistan Standard Time;270;(UTC+04:30) Kabul;Afghanistan Standard Time;Afghanistan Daylight Time;;";
                    break;
                case StandardTimeZone.WestAsia:
                    serializedString = @"West Asia Standard Time;300;(UTC+05:00) Ashgabat, Tashkent;West Asia Standard Time;West Asia Daylight Time;;";
                    break;
                case StandardTimeZone.Ekaterinburg:
                    serializedString = @"Ekaterinburg Standard Time;300;(UTC+05:00) Ekaterinburg;Russia TZ 4 Standard Time;Russia TZ 4 Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Pakistan:
                    serializedString = @"Pakistan Standard Time;300;(UTC+05:00) Islamabad, Karachi;Pakistan Standard Time;Pakistan Daylight Time;[01:01:2008;12:31:2008;60;[0;23:59:59.999;5;5;6;];[0;23:59:59.999;10;5;5;];][01:01:2009;12:31:2009;60;[0;23:59:59.999;4;2;2;];[0;23:59:59.999;10;5;6;];];";
                    break;
                case StandardTimeZone.Qyzylorda:
                    serializedString = @"Qyzylorda Standard Time;300;(UTC+05:00) Qyzylorda;Qyzylorda Standard Time;Qyzylorda Daylight Time;[01:01:0001;12:31:2017;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2018;12:31:2018;60;[0;00:00:00;1;1;1;];[0;00:00:00;12;3;5;];];";
                    break;
                case StandardTimeZone.India:
                    serializedString = @"India Standard Time;330;(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi;India Standard Time;India Daylight Time;;";
                    break;
                case StandardTimeZone.SriLanka:
                    serializedString = @"Sri Lanka Standard Time;330;(UTC+05:30) Sri Jayawardenepura;Sri Lanka Standard Time;Sri Lanka Daylight Time;;";
                    break;
                case StandardTimeZone.Nepal:
                    serializedString = @"Nepal Standard Time;345;(UTC+05:45) Kathmandu;Nepal Standard Time;Nepal Daylight Time;;";
                    break;
                case StandardTimeZone.CentralAsia:
                    serializedString = @"Central Asia Standard Time;360;(UTC+06:00) Astana;Central Asia Standard Time;Central Asia Daylight Time;;";
                    break;
                case StandardTimeZone.Bangladesh:
                    serializedString = @"Bangladesh Standard Time;360;(UTC+06:00) Dhaka;Bangladesh Standard Time;Bangladesh Daylight Time;[01:01:2009;12:31:2009;60;[0;23:00:00;6;3;5;];[0;23:59:59.999;12;5;4;];];";
                    break;
                case StandardTimeZone.Omsk:
                    serializedString = @"Omsk Standard Time;360;(UTC+06:00) Omsk;Omsk Standard Time;Omsk Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Myanmar:
                    serializedString = @"Myanmar Standard Time;390;(UTC+06:30) Yangon (Rangoon);Myanmar Standard Time;Myanmar Daylight Time;;";
                    break;
                case StandardTimeZone.SoutheastAsia:
                    serializedString = @"SE Asia Standard Time;420;(UTC+07:00) Bangkok, Hanoi, Jakarta;SE Asia Standard Time;SE Asia Daylight Time;;";
                    break;
                case StandardTimeZone.Altai:
                    serializedString = @"Altai Standard Time;420;(UTC+07:00) Barnaul, Gorno-Altaysk;Altai Standard Time;Altai Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];-60;][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];-60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;02:00:00;3;5;0;];];";
                    break;
                case StandardTimeZone.WesternMongolia:
                    serializedString = @"W. Mongolia Standard Time;420;(UTC+07:00) Hovd;W. Mongolia Standard Time;W. Mongolia Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;3;5;6;];[0;02:00:00;9;5;6;];][01:01:2015;12:31:2015;60;[0;02:00:00;3;5;6;];[0;23:59:59.999;9;5;5;];][01:01:2016;12:31:2016;60;[0;02:00:00;3;5;6;];[0;23:59:59.999;9;4;5;];];";
                    break;
                case StandardTimeZone.NorthAsia:
                    serializedString = @"North Asia Standard Time;420;(UTC+07:00) Krasnoyarsk;Russia TZ 6 Standard Time;Russia TZ 6 Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.NorthernCentralAsia:
                    serializedString = @"N. Central Asia Standard Time;420;(UTC+07:00) Novosibirsk;Novosibirsk Standard Time;Novosibirsk Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];-60;][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];-60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;02:00:00;7;4;0;];];";
                    break;
                case StandardTimeZone.Tomsk:
                    serializedString = @"Tomsk Standard Time;420;(UTC+07:00) Tomsk;Tomsk Standard Time;Tomsk Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];-60;][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];-60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;02:00:00;5;5;0;];];";
                    break;
                case StandardTimeZone.China:
                    serializedString = @"China Standard Time;480;(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi;China Standard Time;China Daylight Time;;";
                    break;
                case StandardTimeZone.NorthAsiaEast:
                    serializedString = @"North Asia East Standard Time;480;(UTC+08:00) Irkutsk;Russia TZ 7 Standard Time;Russia TZ 7 Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.Singapore:
                    serializedString = @"Singapore Standard Time;480;(UTC+08:00) Kuala Lumpur, Singapore;Malay Peninsula Standard Time;Malay Peninsula Daylight Time;;";
                    break;
                case StandardTimeZone.WesternAustralia:
                    serializedString = @"W. Australia Standard Time;480;(UTC+08:00) Perth;W. Australia Standard Time;W. Australia Daylight Time;[01:01:2006;12:31:2006;60;[0;02:00:00;12;1;0;];[0;00:00:00;1;1;0;];][01:01:2007;12:31:2007;60;[0;02:00:00;10;5;0;];[0;03:00:00;3;5;0;];][01:01:2008;12:31:2008;60;[0;02:00:00;10;5;0;];[0;03:00:00;3;5;0;];][01:01:2009;12:31:2009;60;[0;00:00:00;1;1;4;];[0;03:00:00;3;5;0;];];";
                    break;
                case StandardTimeZone.Taipei:
                    serializedString = @"Taipei Standard Time;480;(UTC+08:00) Taipei;Taipei Standard Time;Taipei Daylight Time;;";
                    break;
                case StandardTimeZone.Ulaanbaatar:
                    serializedString = @"Ulaanbaatar Standard Time;480;(UTC+08:00) Ulaanbaatar;Ulaanbaatar Standard Time;Ulaanbaatar Daylight Time;[01:01:2015;12:31:2015;60;[0;02:00:00;3;5;6;];[0;23:59:59.999;9;5;5;];][01:01:2016;12:31:2016;60;[0;02:00:00;3;5;6;];[0;23:59:59.999;9;4;5;];];";
                    break;
                case StandardTimeZone.AustraliaCentralWestern:
                    serializedString = @"Aus Central W. Standard Time;525;(UTC+08:45) Eucla;Aus Central W. Standard Time;Aus Central W. Daylight Time;;";
                    break;
                case StandardTimeZone.Transbaikal:
                    serializedString = @"Transbaikal Standard Time;540;(UTC+09:00) Chita;Transbaikal Standard Time;Transbaikal Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;120;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;02:00:00;3;5;0;];];";
                    break;
                case StandardTimeZone.Tokyo:
                    serializedString = @"Tokyo Standard Time;540;(UTC+09:00) Osaka, Sapporo, Tokyo;Tokyo Standard Time;Tokyo Daylight Time;;";
                    break;
                case StandardTimeZone.NorthKorea:
                    serializedString = @"North Korea Standard Time;540;(UTC+09:00) Pyongyang;North Korea Standard Time;North Korea Daylight Time;[01:01:2015;12:31:2015;30;[0;00:00:00;1;1;4;];[0;23:59:59.999;8;2;5;];-30;][01:01:2016;12:31:2016;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2017;12:31:2017;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-30;][01:01:2018;12:31:2018;-30;[0;00:00:00;1;1;1;];[0;23:30:00;5;1;5;];];";
                    break;
                case StandardTimeZone.Korea:
                    serializedString = @"Korea Standard Time;540;(UTC+09:00) Seoul;Korea Standard Time;Korea Daylight Time;;";
                    break;
                case StandardTimeZone.Yakutsk:
                    serializedString = @"Yakutsk Standard Time;540;(UTC+09:00) Yakutsk;Russia TZ 8 Standard Time;Russia TZ 8 Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.CentralAustralia:
                    serializedString = @"Cen. Australia Standard Time;570;(UTC+09:30) Adelaide;Cen. Australia Standard Time;Cen. Australia Daylight Time;[01:01:0001;12:31:2007;60;[0;02:00:00;10;5;0;];[0;03:00:00;3;5;0;];][01:01:2008;12:31:9999;60;[0;02:00:00;10;1;0;];[0;03:00:00;4;1;0;];];";
                    break;
                case StandardTimeZone.AustraliaCentral:
                    serializedString = @"AUS Central Standard Time;570;(UTC+09:30) Darwin;AUS Central Standard Time;AUS Central Daylight Time;;";
                    break;
                case StandardTimeZone.EasternAustralia:
                    serializedString = @"E. Australia Standard Time;600;(UTC+10:00) Brisbane;E. Australia Standard Time;E. Australia Daylight Time;;";
                    break;
                case StandardTimeZone.AustraliaEastern:
                    serializedString = @"AUS Eastern Standard Time;600;(UTC+10:00) Canberra, Melbourne, Sydney;AUS Eastern Standard Time;AUS Eastern Daylight Time;[01:01:0001;12:31:2007;60;[0;02:00:00;10;5;0;];[0;03:00:00;3;5;0;];][01:01:2008;12:31:9999;60;[0;02:00:00;10;1;0;];[0;03:00:00;4;1;0;];];";
                    break;
                case StandardTimeZone.WestPacific:
                    serializedString = @"West Pacific Standard Time;600;(UTC+10:00) Guam, Port Moresby;West Pacific Standard Time;West Pacific Daylight Time;;";
                    break;
                case StandardTimeZone.Tasmania:
                    serializedString = @"Tasmania Standard Time;600;(UTC+10:00) Hobart;Tasmania Standard Time;Tasmania Daylight Time;[01:01:0001;12:31:2007;60;[0;02:00:00;10;1;0;];[0;03:00:00;3;5;0;];][01:01:2008;12:31:9999;60;[0;02:00:00;10;1;0;];[0;03:00:00;4;1;0;];];";
                    break;
                case StandardTimeZone.Vladivostok:
                    serializedString = @"Vladivostok Standard Time;600;(UTC+10:00) Vladivostok;Russia TZ 9 Standard Time;Russia TZ 9 Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.LordHowe:
                    serializedString = @"Lord Howe Standard Time;630;(UTC+10:30) Lord Howe Island;Lord Howe Standard Time;Lord Howe Daylight Time;[01:01:0001;12:31:2005;30;[0;02:00:00;10;5;0;];[0;02:00:00;3;5;0;];][01:01:2006;12:31:2006;30;[0;02:00:00;10;5;0;];[0;02:00:00;4;1;0;];][01:01:2007;12:31:2007;30;[0;02:00:00;10;5;0;];[0;02:00:00;3;5;0;];][01:01:2008;12:31:9999;30;[0;02:00:00;10;1;0;];[0;02:00:00;4;1;0;];];";
                    break;
                case StandardTimeZone.Bougainville:
                    serializedString = @"Bougainville Standard Time;660;(UTC+11:00) Bougainville Island;Bougainville Standard Time;Bougainville Daylight Time;[01:01:0001;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2014;12:31:2014;60;[0;02:00:00;12;5;0;];[0;00:00:00;1;1;3;];-60;];";
                    break;
                case StandardTimeZone.Magadan:
                    serializedString = @"Magadan Standard Time;660;(UTC+11:00) Magadan;Magadan Standard Time;Magadan Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];][01:01:2012;12:31:2012;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2013;12:31:2013;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];60;][01:01:2014;12:31:2014;120;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;02:00:00;4;5;0;];];";
                    break;
                case StandardTimeZone.Norfolk:
                    serializedString = @"Norfolk Standard Time;660;(UTC+11:00) Norfolk Island;Norfolk Standard Time;Norfolk Daylight Time;[01:01:0001;12:31:2014;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];30;][01:01:2015;12:31:2015;30;[0;00:00:00;1;1;4;];[0;02:00:00;10;1;0;];][01:01:2019;12:31:2019;60;[0;02:00:00;10;1;0;];[0;00:00:00;1;1;2;];][01:01:2020;12:31:9999;60;[0;02:00:00;10;1;0;];[0;03:00:00;4;1;0;];];";
                    break;
                case StandardTimeZone.Sakhalin:
                    serializedString = @"Sakhalin Standard Time;660;(UTC+11:00) Sakhalin;Sakhalin Standard Time;Sakhalin Daylight Time;[01:01:0001;12:31:2010;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];-60;][01:01:2011;12:31:2011;60;[0;02:00:00;3;5;0;];[0;00:00:00;1;1;6;];-60;][01:01:2014;12:31:2014;60;[0;00:00:00;1;1;3;];[0;02:00:00;10;5;0;];-60;][01:01:2015;12:31:2015;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-60;][01:01:2016;12:31:2016;-60;[0;00:00:00;1;1;5;];[0;02:00:00;3;5;0;];];";
                    break;
                case StandardTimeZone.CentralPacific:
                    serializedString = @"Central Pacific Standard Time;660;(UTC+11:00) Solomon Is., New Caledonia;Central Pacific Standard Time;Central Pacific Daylight Time;;";
                    break;
                case StandardTimeZone.NewZealand:
                    serializedString = @"New Zealand Standard Time;720;(UTC+12:00) Auckland, Wellington;New Zealand Standard Time;New Zealand Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;10;1;0;];[0;03:00:00;3;3;0;];][01:01:2007;12:31:2007;60;[0;02:00:00;9;5;0;];[0;03:00:00;3;3;0;];][01:01:2008;12:31:9999;60;[0;02:00:00;9;5;0;];[0;03:00:00;4;1;0;];];";
                    break;
                case StandardTimeZone.Fiji:
                    serializedString = @"Fiji Standard Time;720;(UTC+12:00) Fiji;Fiji Standard Time;Fiji Daylight Time;[01:01:2009;12:31:2009;60;[0;02:00:00;11;5;0;];[0;00:00:00;1;1;4;];][01:01:2010;12:31:2010;60;[0;02:00:00;10;4;0;];[0;03:00:00;3;5;0;];][01:01:2011;12:31:2011;60;[0;02:00:00;10;4;0;];[0;03:00:00;3;1;0;];][01:01:2012;12:31:2012;60;[0;02:00:00;10;3;0;];[0;03:00:00;1;4;0;];][01:01:2013;12:31:2013;60;[0;02:00:00;10;4;0;];[0;03:00:00;1;3;0;];][01:01:2014;12:31:2014;60;[0;02:00:00;11;1;0;];[0;02:00:00;1;3;0;];][01:01:2015;12:31:2015;60;[0;02:00:00;11;1;0;];[0;03:00:00;1;3;0;];][01:01:2016;12:31:2016;60;[0;02:00:00;11;1;0;];[0;03:00:00;1;3;0;];][01:01:2017;12:31:2017;60;[0;02:00:00;11;1;0;];[0;03:00:00;1;3;0;];][01:01:2018;12:31:2018;60;[0;02:00:00;11;1;0;];[0;03:00:00;1;2;0;];][01:01:2019;12:31:2019;60;[0;02:00:00;11;2;0;];[0;03:00:00;1;2;0;];][01:01:2020;12:31:2020;60;[0;02:00:00;12;3;0;];[0;03:00:00;1;2;0;];][01:01:2021;12:31:2021;60;[0;00:00:00;1;1;5;];[0;03:00:00;1;3;0;];][01:01:2022;12:31:2022;60;[0;02:00:00;11;2;0;];[0;00:00:00;1;1;6;];][01:01:2023;12:31:2023;60;[0;02:00:00;11;2;0;];[0;03:00:00;1;3;0;];][01:01:2024;12:31:2024;60;[0;02:00:00;11;2;0;];[0;03:00:00;1;2;0;];][01:01:2025;12:31:2025;60;[0;02:00:00;11;2;0;];[0;03:00:00;1;2;0;];][01:01:2026;12:31:2026;60;[0;02:00:00;11;2;0;];[0;03:00:00;1;3;0;];][01:01:2027;12:31:2027;60;[0;02:00:00;11;2;0;];[0;03:00:00;1;3;0;];][01:01:2028;12:31:2028;60;[0;02:00:00;11;2;0;];[0;03:00:00;1;3;0;];][01:01:2029;12:31:9999;60;[0;02:00:00;11;2;0;];[0;03:00:00;1;2;0;];];";
                    break;
                case StandardTimeZone.Kamchatka:
                    serializedString = @"Kamchatka Standard Time;720;(UTC+12:00) Petropavlovsk-Kamchatsky - Old;Kamchatka Standard Time;Kamchatka Daylight Time;[01:01:0001;12:31:9999;60;[0;02:00:00;3;5;0;];[0;03:00:00;10;5;0;];];";
                    break;
                case StandardTimeZone.ChathamIslands:
                    serializedString = @"Chatham Islands Standard Time;765;(UTC+12:45) Chatham Islands;Chatham Islands Standard Time;Chatham Islands Daylight Time;[01:01:0001;12:31:2006;60;[0;02:45:00;10;1;0;];[0;03:45:00;3;3;0;];][01:01:2007;12:31:2007;60;[0;02:45:00;9;5;0;];[0;03:45:00;3;3;0;];][01:01:2008;12:31:9999;60;[0;02:45:00;9;5;0;];[0;03:45:00;4;1;0;];];";
                    break;
                case StandardTimeZone.Tonga:
                    serializedString = @"Tonga Standard Time;780;(UTC+13:00) Nuku'alofa;Tonga Standard Time;Tonga Daylight Time;[01:01:2016;12:31:2016;60;[0;02:00:00;11;1;0;];[0;00:00:00;1;1;5;];][01:01:2017;12:31:2017;60;[0;00:00:00;1;1;0;];[0;03:00:00;1;3;0;];];";
                    break;
                case StandardTimeZone.Samoa:
                    serializedString = @"Samoa Standard Time;780;(UTC+13:00) Samoa;Samoa Standard Time;Samoa Daylight Time;[01:01:0001;12:31:2009;0;[1;00:00:00;1;1;];[1;00:00:00.001;1;1;];-1440;][01:01:2010;12:31:2010;60;[0;00:00:00;9;5;0;];[0;00:00:00;1;1;5;];-1440;][01:01:2011;12:31:2011;60;[0;03:00:00;9;4;6;];[0;04:00:00;4;1;6;];-1440;][01:01:2012;12:31:9999;60;[0;03:00:00;9;5;0;];[0;04:00:00;4;1;0;];];";
                    break;
                case StandardTimeZone.LineIslands:
                    serializedString = @"Line Islands Standard Time;840;(UTC+14:00) Kiritimati Island;Line Islands Standard Time;Line Islands Daylight Time;;";
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(StandardTimeZone)} is not supported: {timeZone}."));
            }

            var result = TimeZoneInfo.FromSerializedString(serializedString);

            CachedStandardTimeZoneToTimeZoneInfoMap.TryAdd(timeZone, result);

            return result;
        }
    }
}
