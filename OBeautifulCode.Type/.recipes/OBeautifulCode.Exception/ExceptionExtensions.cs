// --------------------------------------------------------------------------------------------------------------------
// <copyright file="ExceptionExtensions.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.Exception.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Exception.Recipes
{
    using global::System;
    using global::System.Runtime.ExceptionServices;

    /// <summary>
    /// Extension methods on type <see cref="Exception"/>.
    /// </summary>
#if !OBeautifulCodeExceptionSolution
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.Exception.Recipes", "See package version number")]
    internal
#else
    public
#endif
    static class ExceptionExtensions
    {
        /// <summary>
        /// Rethrows an exception, which will preserve the stack trace.
        /// </summary>
        /// <param name="exception">The exception.</param>
        /// <exception cref="ArgumentNullException"><paramref name="exception"/> is null.</exception>
        public static void Rethrow(
            this Exception exception)
        {
            if (exception == null)
            {
                throw new ArgumentNullException(nameof(exception));
            }

            ExceptionDispatchInfo.Capture(exception).Throw();
        }

        /// <summary>
        /// Attempt to rethrow the <see cref="Exception.InnerException"/>.
        /// If null; rethrow the specified exception.
        /// </summary>
        /// <param name="exception">The exception.</param>
        /// <exception cref="ArgumentNullException"><paramref name="exception"/> is null.</exception>
        public static void RethrowInnerExceptionOrElseRethrow(
            this Exception exception)
        {
            if (exception == null)
            {
                throw new ArgumentNullException(nameof(exception));
            }

            if (exception.InnerException == null)
            {
                exception.Rethrow();
            }
            else
            {
                exception.InnerException.Rethrow();
            }
        }
    }
}